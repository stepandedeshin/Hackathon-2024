from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           KeyboardButton, ReplyKeyboardMarkup)
from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder


start_message = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text = 'ü§ñ GPT –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç', callback_data = 'gpt_assistant')],
    [InlineKeyboardButton(text = 'üìã FAQ', callback_data = 'faq')],
    [InlineKeyboardButton(text = 'üó£Ô∏è –û–Ω–ª–∞–π–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data = 'help_by_admin')],
    [InlineKeyboardButton(text = 'üì± –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –±–æ—Ç–µ', callback_data = 'auth')]
])


gpt_assistant = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text = 'üôã‚Äç‚ôÇÔ∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data = 'ask_gpt_assistant')],
    [InlineKeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data = 'main_menu')],
])


show_faq = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data = f'main_menu_without_deleting')],
])


help_by_admin = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text = 'üîé –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data = 'start_conversation')],
    [InlineKeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data = 'main_menu')],
])


auth = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text = 'üì≤ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact = True)],
    [KeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')],
], one_time_keyboard = True, resize_keyboard = True)


auth_edit_or_delete = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text = 'üì± –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', callback_data = 'edit_phone_number_request')],
    [InlineKeyboardButton(text = 'üîó –û—Ç–≤—è–∑–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', callback_data = 'delete_phone_number_request')],
    [InlineKeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data = 'main_menu')],
])

auth_to_use_online_support = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text = 'üì± –ü—Ä–∏–≤—è–∑–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', callback_data = 'auth')],
    [InlineKeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data = 'main_menu')],
])


class PaginationFAQ(CallbackData, prefix = 'pag'):
    action: str
    page: int
    

def paginatorfaq(length_of_faq: int, page: int = 0) -> InlineKeyboardBuilder:
    '''
    Returns inline keyboard that used for pagination (the ability to select the page of all text)
    '''
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text = '‚¨ÖÔ∏è', callback_data = PaginationFAQ(action = 'prev', page = page).pack()),
        InlineKeyboardButton(text = f'{page+1}/{length_of_faq}', callback_data = PaginationFAQ(action = 'page_number', page = page).pack()),
        InlineKeyboardButton(text = '‚û°Ô∏è', callback_data = PaginationFAQ(action = 'next', page = page).pack()),
        width=3
    )
    builder.row(
        InlineKeyboardButton(text = 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data = 'main_menu')
    )
    return builder.as_markup()